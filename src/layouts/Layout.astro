---
import "@fontsource/roboto/400.css";
import "@fontsource/roboto/500.css";
import "@fontsource/roboto/700.css";

import ConfigCarrier from "@components/ConfigCarrier.astro";
import { profileConfig, siteConfig } from "@/config";
import {
	AUTO_MODE,
	BANNER_HEIGHT,
	BANNER_HEIGHT_EXTEND,
	BANNER_HEIGHT_HOME,
	DARK_MODE,
	DEFAULT_THEME,
	LIGHT_MODE,
	PAGE_WIDTH,
} from "../constants/constants";
import { defaultFavicons } from "../constants/icon";
import type { Favicon } from "../types/config";
import { pathsEqual, url } from "../utils/url-utils";
import "katex/dist/katex.css";

interface Props {
	title?: string;
	banner?: string;
	description?: string;
	lang?: string;
	setOGTypeArticle?: boolean;
}

let { title, banner, description, lang, setOGTypeArticle } = Astro.props;

// Usar demo-banner.png SIEMPRE
banner = "/src/assets/images/demo-banner.png";

const isHomePage = pathsEqual(Astro.url.pathname, url("/"));
const configHue = siteConfig.themeColor.hue;
const enableBanner = siteConfig.banner.enable;

let pageTitle: string;
if (title) {
	pageTitle = `${title} - ${siteConfig.title}`;
} else if (siteConfig.subtitle && siteConfig.subtitle.trim() !== "") {
	pageTitle = `${siteConfig.title} - ${siteConfig.subtitle}`;
} else {
	pageTitle = siteConfig.title;
}

const favicons: Favicon[] =
	siteConfig.favicon.length > 0 ? siteConfig.favicon : defaultFavicons;

if (!lang) {
	lang = `${siteConfig.lang}`;
}
const siteLang = lang.replace("_", "-");

const bannerOffsetByPosition = {
	top: `${BANNER_HEIGHT_EXTEND}vh`,
	center: `${BANNER_HEIGHT_EXTEND / 2}vh`,
	bottom: "0",
};
const bannerOffset =
	bannerOffsetByPosition[siteConfig.banner.position || "center"];
---

<!DOCTYPE html>
<html lang={siteLang} class="bg-[var(--page-bg)] transition text-[14px] md:text-[16px]"
	  data-overlayscrollbars-initialize
>
	<head>
		<title>{pageTitle}</title>
		<meta charset="UTF-8" />
		<meta name="description" content={description || pageTitle}>
		<meta name="author" content={profileConfig.name}>

		<meta property="og:site_name" content={siteConfig.title}>
		<meta property="og:url" content={Astro.url}>
		<meta property="og:title" content={pageTitle}>
		<meta property="og:description" content={description || pageTitle}>
		{setOGTypeArticle ? (
			<meta property="og:type" content="article" />
		) : (
			<meta property="og:type" content="website" />
		)}

		<meta name="twitter:card" content="summary_large_image">
		<meta property="twitter:url" content={Astro.url}>
		<meta name="twitter:title" content={pageTitle}>
		<meta name="twitter:description" content={description || pageTitle}>
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		{favicons.map(favicon => (
			<link rel="icon"
				  href={favicon.src.startsWith('/') ? url(favicon.src) : favicon.src}
				  sizes={favicon.sizes}
				  media={favicon.theme && `(prefers-color-scheme: ${favicon.theme})`}
			/>
		))}

		<script is:inline define:vars={{DEFAULT_THEME, LIGHT_MODE, DARK_MODE, AUTO_MODE, BANNER_HEIGHT_EXTEND, PAGE_WIDTH, configHue}}>
			const theme = localStorage.getItem('theme') || DEFAULT_THEME;
			switch (theme) {
				case LIGHT_MODE:
					document.documentElement.classList.remove('dark');
					break
				case DARK_MODE:
					document.documentElement.classList.add('dark');
					break
				case AUTO_MODE:
					if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
						document.documentElement.classList.add('dark');
					} else {
						document.documentElement.classList.remove('dark');
					}
			}
			const hue = localStorage.getItem('hue') || configHue;
			document.documentElement.style.setProperty('--hue', hue);
			let offset = Math.floor(window.innerHeight * (BANNER_HEIGHT_EXTEND / 100));
			offset = offset - offset % 4;
			document.documentElement.style.setProperty('--banner-height-extend', `${offset}px`);
		</script>
		<style define:vars={{
			configHue,
			'page-width': `${PAGE_WIDTH}rem`,
		}}></style>

		<slot name="head"></slot>
		<link rel="alternate" type="application/rss+xml" title={profileConfig.name} href={`${Astro.site}rss.xml`}/>
	</head>
	<body class="min-h-screen transition" class:list={[{"lg:is-home": isHomePage, "enable-banner": enableBanner}]}
		  data-overlayscrollbars-initialize
	>
		<ConfigCarrier />

		<!-- Barra de Navegación -->
		<div id="navbar-wrapper">
			<!-- Aquí debe ir tu código actual del navbar -->
		</div>

		<!-- Banner Responsive: demo-banner.png debajo del navbar -->
		{enableBanner && (
			<div id="banner-wrapper">
				<img id="banner" class="banner-img" src={banner} alt="Banner" />
			</div>
		)}
		<!-- Fin Banner -->

		<slot />

		<div id="page-height-extend" class="hidden h-[300vh]"></div>
	</body>
</html>

<style is:global define:vars={{
	bannerOffset,
	'banner-height-home': `${BANNER_HEIGHT_HOME}vh`,
	'banner-height': `${BANNER_HEIGHT}vh`,
}}>
@tailwind components;
@layer components {
	.enable-banner.is-home #banner-wrapper {
		@apply h-[var(--banner-height-home)];
	}
	.enable-banner #banner-wrapper {
		@apply h-[var(--banner-height-home)];
	}
	.enable-banner.is-home #banner {
		@apply h-[var(--banner-height-home)];
	}
	.enable-banner #banner {
		@apply h-[var(--banner-height-home)];
	}
	.navbar-hidden {
		@apply opacity-0 -translate-y-16;
	}
}
/* ESTILOS RESPONSIVOS PARA EL BANNER */
.banner-img {
	width: 100%;
	height: auto;
	max-width: 100%;
	display: block;
	object-fit: cover;
}
#banner-wrapper {
	width: 100%;
	max-width: 100%;
	overflow: hidden;
}
@media (max-width: 600px) {
	#banner-wrapper {
		height: 180px;
	}
	.banner-img {
		height: 180px;
	}
}
</style>

<script>
/* ...Tu código JS tal como lo tenías... */
</script>
<script>
/* ...Tu código JS de PhotoSwipe tal como lo tenías... */
</script>
